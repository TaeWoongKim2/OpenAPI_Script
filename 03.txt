11. 

GET /orders/1004?apikey=xasjkdfvssdsdsgrbbrhyj

{
   "code" : 147,
   "statusCode" : 401,
   "message" : "Invalid API Key"
}



22.

<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-oxm</artifactId>
    <version>${org.springframework-version}</version>
</dependency>



24. 

<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>${jackson.version}</version>
</dependency>
<dependency>
    <groupId>com.fasterxml.jackson.dataformat</groupId>
    <artifactId>jackson-dataformat-xml</artifactId>
    <version>${jackson.version}</version>
</dependency>




32.

<beans:bean id="jaxb2" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
   <beans:property  name="classesToBeBound">
      <beans:list>
         <beans:value>com.multi.contactsapp.domain.Contact</beans:value>
         <beans:value>com.multi.contactsapp.domain.ContactList</beans:value>
         <beans:value>com.multi.contactsapp.domain.Result</beans:value>
      </beans:list>
   </beans:property>
</beans:bean>


33.

<beans:bean id="xmlView" class="org.springframework.web.servlet.view.xml.MarshallingView">
   <beans:constructor-arg ref="jaxb2"></beans:constructor-arg>	
</beans:bean>

<beans:bean id="jsonView" 
    class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
</beans:bean>


42.

** Web.xml에 추가 **
<filter>
  <filter-name>httpPutFormFilter</filter-name>
  <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
</filter>

<filter-mapping>
  <filter-name>httpPutFormFilter</filter-name>
  <servlet-name>appServlet</servlet-name>
</filter-mapping>



44.

<beans:bean id="contentNegotiationManager"
  class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
  <beans:property name="favorParameter" value="true" />
  <beans:property name="parameterName" value="output" />
  <beans:property name="ignoreAcceptHeader" value="false" />
  <beans:property name="defaultContentType" value="application/json" />

  <beans:property name="mediaTypes">
    <beans:map>
      <beans:entry key="json" value="application/json" />
      <beans:entry key="xml" value="application/xml" />
      <beans:entry key="html" value="text/html" />
    </beans:map>
  </beans:property>
</beans:bean>

<beans:bean id="contentNegotiatingViewResolver"
  class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
  <beans:property name="contentNegotiationManager" ref="contentNegotiationManager"></beans:property>
  <beans:property name="viewResolvers">
    <beans:list>
      <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
      <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
      </beans:bean>
    </beans:list>
  </beans:property>
  <beans:property name="defaultViews">
    <beans:list>
      <beans:ref bean="jsonView" />
      <beans:ref bean="xmlView" />
    </beans:list>
  </beans:property>
</beans:bean>



57.

<?xml version="1.0" encoding="UTF-8"?>
<beans:beans ......>
    <annotation-driven content-negotiation-manager="contentNegotiationManager">
    </annotation-driven>
     .......
    <beans:bean id="contentNegotiationManager"
        class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
       <beans:property name="favorParameter" value="true" />
       <beans:property name="parameterName" value="output" />
       <beans:property name="ignoreAcceptHeader" value="false" />
       <beans:property name="defaultContentType" value="application/json" />

       <beans:property name="mediaTypes">
          <beans:map>
              <beans:entry key="json" value="application/json" />
              <beans:entry key="xml" value="application/xml" />
              <beans:entry key="html" value="text/html" />
          </beans:map>
       </beans:property>
    </beans:bean>
    ......
</beans:beans>



64.

# datasource 
spring.datasource.url=jdbc:h2:tcp://localhost/~/test
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

spring.jpa.hibernate.ddl-auto=none





73.

# datasource 
spring.datasource.url=jdbc:h2:tcp://localhost/~/test
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
# mybatis config, mapper
mybatis.config-location: classpath:mybatis-config.xml
mybatis.mapper-locations=mapper/**/*.xml
#Encoding UTf-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.http.encoding.force-request=true
spring.http.encoding.force-response=true



74.

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
   <typeAliases>
       <typeAlias type="com.multi.contactsapp.domain.Contact" alias="Contact"/>
   </typeAliases> 
</configuration>






